%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: D:\AGH\SEMESTR_6\Elektroniczna aparatura medyczna\Ćwiczenia projektowe\sygnały eam\sygnały eam\na_stole_5kg_iza.ASC
%
% Auto-generated by MATLAB on 06-May-2022 16:12:00

%% Setup the Import Options and import the data
clear all;
close all;

opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = [32, Inf];
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["MegaWinASCIIfile", "VarName2"];
opts.VariableTypes = ["double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "MegaWinASCIIfile", "TrimNonNumeric", true);
opts = setvaropts(opts, "MegaWinASCIIfile", "ThousandsSeparator", ",");

% Import the data
nastole5kg = readtable("C:\Users\Asus\Desktop\semestr 6\EAM\projekt\eam\Iza\na_stole_5kg_iza.ASC", opts);
bezpodparcia5kg = readtable("C:\Users\Asus\Desktop\semestr 6\EAM\projekt\eam\Iza\bezpodparcia_5kg_iza.ASC", opts);


%% Convert to output type
nastole5kg = table2array(nastole5kg);
bezpodparcia5kg = table2array(bezpodparcia5kg);
%% take only second column
nastole5kg = nastole5kg(:,2);
bezpodparcia5kg = bezpodparcia5kg(:,2);
%% Clear temporary variables
clear opts
%% OBRÓBKA DANYCH
%% Zero crossing    
time = (1:1:10)

nastole5kg_cross = nastole5kg(1:10000,:);
bezpodparcia5kg_cross = bezpodparcia5kg(1:10000,:);

first_divide_nastole5kg = buffer(nastole5kg_cross, numel(nastole5kg_cross)/10); 
counter_nastole5kg = zeros(10,1)
first_divide_bezpodparcia5kg = buffer(bezpodparcia5kg_cross, numel(bezpodparcia5kg_cross)/10); 
counter_bezpodparcia5kg = zeros(10,1)

for i = 1:10
    for j = 1:999
       if (first_divide_nastole5kg(j, i) * first_divide_nastole5kg(j+1, i) < 0) | (first_divide_nastole5kg(j, i) * first_divide_nastole5kg(j+1, i) == 0)
            counter_nastole5kg(i) = counter_nastole5kg(i) + 1;
        end
    end
end

for i = 1:10
    for j = 1:999
        if (first_divide_bezpodparcia5kg(j, i) * first_divide_bezpodparcia5kg(j+1, i) < 0) | (first_divide_bezpodparcia5kg(j, i) * first_divide_bezpodparcia5kg(j+1, i) == 0)
            counter_bezpodparcia5kg(i) = counter_bezpodparcia5kg(i) + 1;
        end
    end
end

% figure()
% subplot(1, 2, 1)
% plot(nastole5kg_cross)
% title('Surowy sygnał EMG')
% xlabel("Time [ms]")
% ylabel("Amplitude [μV]")
% subplot(1, 2, 2)
% bar(time, counter_nastole5kg)
% title('Częstość występowania amplitudy równej 0 - z podparciem z obciążeniem 5kg')
% xlabel('Czas [s]')
% ylabel('Ilość przekroczeń zer')
% grid on;
% 
% figure()
% subplot(1, 2, 1)
% plot(bezpodparcia5kg_cross)
% title('Surowy sygnał EMG')
% xlabel("Time [ms]")
% ylabel("Amplitude [μV]")
% subplot(1, 2, 2)
% bar(time, counter_bezpodparcia5kg)
% title('Częstość występowania amplitudy równej 0 - bez podparcia z obciążeniem 5kg')
% xlabel('Czas [s]')
% ylabel('Ilość przekroczeń zer')
% grid on;

figure()
subplot(1, 2, 1)
bar(time, counter_nastole5kg)
sgtitle('Częstość występowania amplitudy równej 0')
legend('Z podparciem z obciążeniem 5kg')
xlabel('Czas [s]')
ylabel('Ilość przekroczeń zer')
ylim([0 120])
grid on;
subplot(1, 2, 2)
bar(time, counter_bezpodparcia5kg)
legend('Bez podparcia z obciążeniem 5kg')
xlabel('Czas [s]')
ylabel('Ilość przekroczeń zer')
ylim([0 120])
grid on;

% Fourier Transform
L_lo = length(nastole5kg);
L_hi = length(bezpodparcia5kg);

fs = 1000; %sampling frequency
f_lo = fs*(0:(L_lo/2))/L_lo; % FFT frequency from 0 to L/2 data length
f_hi = fs*(0:(L_hi/2))/L_hi;

%compute two sided spectrum (-Fmax:Fmax)
p1 = fft(nastole5kg);
p2 = fft(bezpodparcia5kg);

%divive by L for normalization of the power of the output 
p1 = abs(p1/L_lo);
p2 = abs(p2/L_hi);

% compute signal sided spectrum
p1=p1(1:L_lo/2+1);
p1(2:end-1) = 2*p1(2:end-1);
p2=p2(1:L_hi/2+1);
p2(2:end-1) = 2*p2(2:end-1);

%Plotting FFT
figure()
subplot(1, 2, 1)
plot(f_lo, p1)
xlabel('Frequency[Hz]')
ylabel('Intensity')
sgtitle('FFT')
legend('Z podparciem z obciążeniem 5kg')
ylim([0 25])
grid on;


subplot(1, 2, 2)
plot(f_hi, p2)
xlabel('Frequency[Hz]')
ylabel('Intensity')
legend('Bez podparcia z obciążeniem 5kg')
ylim([0 25])
grid on;

%% Rectification
nastole5kg = abs(nastole5kg);
bezpodparcia5kg = abs(bezpodparcia5kg);
%% RMS Mean Power of signal
envelope_lo = zeros(L_lo, 1);
envelope_hi = zeros(L_hi, 1);
window = 100;
envelope_lo = sqrt(movmean(nastole5kg.^2, window));
envelope_hi = sqrt(movmean(bezpodparcia5kg.^2, window));
%% Normalization with MVC
MVC_lo = max(nastole5kg);
MVC_lo_normalised = zeros(L_lo, 1);
MVC_lo_normalised = envelope_lo./MVC_lo.*100;

MVC_hi = max(bezpodparcia5kg);
MVC_hi_normalised = zeros(L_hi, 1);
MVC_hi_normalised = envelope_hi./MVC_hi.*100;

figure()
plot(nastole5kg)
hold on;
plot(envelope_lo, 'r')
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
xlim([0 30000])
title('Normalizacja MVC (nastole5kg)')
legend('EMG signal', 'Normalized signal')

figure()
plot(bezpodparcia5kg)
hold on;
plot(envelope_hi, 'r')
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
xlim([0 25000])
title('Normalizacja MVC (bezpodparcia5kg)')
legend('EMG signal', 'Normalized signal')
%% 5KG Z PODPARCIEM
figure()

subplot(3,1,1)
plot((nastole5kg),"b")
hold on
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg + podparcie")
legend("sygnał wyjściowy")
xlim([0 30000])

subplot(3,1,2)
nastole5kg = abs((nastole5kg));
plot((nastole5kg),"b")
hold on
%M2 = movmean(nastole5kg,200);
M1 = conv2(nastole5kg, ones(101,1)/101, 'same');
plot(M1,"g")
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg + podparcie")
legend("moduł z sygnału", "filtracja movingAverage")
xlim([0 30000])

subplot(3,1,3)
plot(M1,"g")
legend("filtracja movingAverage")
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg + podparcie")
xlim([0 30000])


%% 5kg BEZ PODPORCIA - POZYCJA STOJĄCA
figure()

subplot(3,1,1)
plot((bezpodparcia5kg),"b")
hold on
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg, bez podparcia")
legend("sygnał wyjściowy")
xlim([0 30000])

subplot(3,1,2)
bezpodparcia5kg = abs((bezpodparcia5kg));
plot((bezpodparcia5kg),"b")
hold on
%M2 = movmean(bezpodparcia5kg,200);
M2 = conv2(bezpodparcia5kg, ones(101,1)/101, 'same');
plot(M2,"g")
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg, bez podparcia")
legend("moduł z sygnału", "filtracja movingAverage")
xlim([0 30000])

subplot(3,1,3)
plot(M2,"g")
legend("filtracja movingAverage")
xlabel("Time [ms]")
ylabel("Amplitude [μV]")
title("Zginanie z obciążeniem 5kg, bez podparcia")
xlim([0 30000])

% %% Dopasowanie krzywej do sygnałów movingAverage
% 
% t1 = linspace(0,30000, length(M1));
% % M1 = M1(:,2);
% 
% t2 = linspace(0,30000, length(M2));
% % M2 = M2(:,2);
% 
% %% Initialization.
% 
% % Initialize arrays to store fits and goodness-of-fit.
% fitresult = cell( 2, 1 );
% gof = struct( 'sse', cell( 2, 1 ), ...
%     'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );
% 
% %% Fit: 'untitled fit 1'.
% [xData, yData] = prepareCurveData( t1, M1 );
% 
% % Set up fittype and options.
% ft = fittype( 'fourier6' );
% opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% opts.Display = 'Off';
% opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 0 0 0.00136135681655558];
% 
% % Fit model to data.
% [fitresult1, gof(1)] = fit( xData, yData, ft, opts );
% 
% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult1);
% legend( h, 'M1 vs. t1', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 't1', 'Interpreter', 'none' );
% ylabel( 'M1', 'Interpreter', 'none' );
% grid on
% 
% %% Fit: 'untitled fit 2'.
% [xData, yData] = prepareCurveData( t2, M2 );
% 
% % Set up fittype and options.
% ft = fittype( 'fourier6' );
% opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% opts.Display = 'Off';
% opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 0 0 0.00230383461263251];
% 
% % Fit model to data.
% [fitresult2, gof(2)] = fit( xData, yData, ft, opts );
% 
% % Plot fit with data.
% figure( 'Name', 'untitled fit 2' );
% h = plot( fitresult2);
% legend( h, 'M2 vs. t2', 'untitled fit 2', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 't2', 'Interpreter', 'none' );
% ylabel( 'M2', 'Interpreter', 'none' );
% grid on
% 
% 
% %% 
% 
% plot( fitresult1, "r")
% hold on
% plot( fitresult2, "b")
% legend("Zginanie z obciążeniem 5kg + podparcie", "Zginanie z obciążeniem 5kg, bez podparcia")
% xlabel("Time [ms]")
% ylabel("Amplitude [μV]")
% 
% grid on
% hold off
% 


